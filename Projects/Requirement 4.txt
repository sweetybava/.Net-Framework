//Stories
//Main class

using System;

namespace Project04
{
    //main class
    class Program
    {
        public static int noOfStory;
        static void Main(string[] args)
        {
            //fields
            int noOfLikes;
            string storyDetails, authourName;

            //Get the user input
            Console.WriteLine("Enter the number of stories:");
            noOfStory = Convert.ToInt32(Console.ReadLine());

            Story[] storyDetailsArray = new Story[noOfStory];
            Story[] findStoryList = new Story[] { };
            StoryBO storyBO = new StoryBO();


            for (int i = 0; i < noOfStory; i++)
            {

                storyDetails = Console.ReadLine();

                string[] storyStringArray = storyDetails.Split(",");

                storyDetailsArray[i] = new Story(storyStringArray[0], storyStringArray[1], storyStringArray[2],
                    Convert.ToInt32(storyStringArray[3]), Convert.ToInt32(storyStringArray[4]), Convert.ToInt32(storyStringArray[5]));
            }

            Console.WriteLine("Enter a search type: \n1.By author \n2.By number of likes");
            int choice = Convert.ToInt32(Console.ReadLine());

            switch (choice)
            {
                case 1:
                    Console.WriteLine("Enter the author name:");
                    authourName = Console.ReadLine();//.Trim();
                    findStoryList = storyBO.findStoryByAuthor(storyDetailsArray, authourName);
                    break;
                case 2:
                    Console.WriteLine("Enter the number of likes:");
                    noOfLikes = Convert.ToInt32(Console.ReadLine());
                    findStoryList = storyBO.finfindStoryByLikes(storyDetailsArray, noOfLikes);
                    break;
                default:
                    Console.WriteLine("Invalid choice");
                    break;
            }

            if (findStoryList.Length != 0 && findStoryList != null)
            {
                foreach (Story story in findStoryList)
                {
                    Console.WriteLine(story);
                }
            }
            else
            {
                Console.WriteLine("No such story is present");
            }

        }
    }
}


//Story class

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Project04
{
    class Story
    {
        //fields
        private string name, authorName, genre;
        private int noOfChapters, noOfLikes, noOfReads;

        //default constructor
        public Story()
        {

        }

        //parameterized constructor
        public Story(string name, string authorName, string genre, int noOfChapters, int noOfLikes, int noOfReads)
        {
            this.Name = name;
            this.AuthorName = authorName;
            this.Genre = genre;
            this.NoOfChapters = noOfChapters;
            this.NoOfLikes = noOfLikes;
            this.NoOfReads = noOfReads;
        }

        //properties
        public string Name { get => name; set => name = value; }
        public string AuthorName { get => authorName; set => authorName = value; }
        public string Genre { get => genre; set => genre = value; }
        public int NoOfChapters { get => noOfChapters; set => noOfChapters = value; }
        public int NoOfLikes { get => noOfLikes; set => noOfLikes = value; }
        public int NoOfReads { get => noOfReads; set => noOfReads = value; }

        public override string ToString()
        {
            return string.Format(this.Name + " " + " " + this.AuthorName + " " + this.Genre
                + " " + this.NoOfChapters + " " + this.NoOfLikes + " " + this.NoOfReads);
        }
    }
}


//StoryBO class

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Project04
{
    class StoryBO
    {
        Story[] stories = new Story[Program.noOfStory];

        //method (author)
        public Story[] findStoryByAuthor(Story[] listOfStory, string authorNameOfStory)
        {
            for (int i = 0; i < listOfStory.Length; i++)
            {
                if (listOfStory[i].AuthorName.Equals(authorNameOfStory))
                {
                    stories[i] = listOfStory[i];
                }
            }
            return stories;
        }

        //method (no. of list)
        public Story[] finfindStoryByLikes(Story[] listOfStory, int likesOfStory)
        {
            for (int i = 0; i < listOfStory.Length; i++)
            {
                if (listOfStory[i].NoOfLikes > likesOfStory)
                {
                    stories[i] = listOfStory[i];
                }
            }
            return stories;
        }
    }
}
